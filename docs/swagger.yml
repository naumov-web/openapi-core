swagger: "2.0"
info:
  title: "OpenAPI constructor"
  description: "Docs for OpenAPI"
  version: "1.0.0"
schemes:
  - "http"
host: api.open-api.ru
basePath: /api

paths:
  /core/auth/login:
    post:
      tags:
        - "user"
        - "login"
      summary: "Register new user"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "CoreAuthLoginRequestBody"
          in: "body"
          description: "Body of request for register new user"
          required: true
          schema:
            $ref: "#/definitions/CoreAuthLoginRequestModel"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/TokenModel"
        401:
          description: "Incorrect login data"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /core/auth/register:
    post:
      tags:
        - "user"
        - "register"
      summary: "Register new user"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "CoreAuthRegisterRequestBody"
          in: "body"
          description: "Body of request for register new user"
          required: true
          schema:
            $ref: "#/definitions/CoreAuthRegisterRequestModel"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/TokenModel"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

definitions:

  TokenModel:
    type: "object"
    properties:
      success:
        type: "boolean"
      token:
        type: "string"

  CoreAuthLoginRequestModel:
    type: "object"
    required:
      - "email"
      - "password"
    properties:
      email:
        type: "string"
      password:
        type: "string"

  CoreAuthRegisterRequestModel:
    type: "object"
    required:
      - "email"
      - "password"
      - "password_confirmation"
    properties:
      email:
        type: "string"
      password:
        type: "string"
      password_confirmation:
        type: "string"
