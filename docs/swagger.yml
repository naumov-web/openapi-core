swagger: "2.0"
info:
  title: "OpenAPI constructor"
  description: "Docs for OpenAPI"
  version: "1.0.0"
schemes:
  - "http"
host: api.open-api.ru
basePath: /api

paths:
  /core/auth/login:
    post:
      tags:
        - "user"
        - "login"
      summary: "Register new user"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "CoreAuthLoginRequestBody"
          in: "body"
          description: "Body of request for register new user"
          required: true
          schema:
            $ref: "#/definitions/CoreAuthLoginRequestModel"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/CoreAuthTokenModel"
        401:
          description: "Incorrect login data"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /core/auth/register:
    post:
      tags:
        - "user"
        - "register"
      summary: "Register new user"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "CoreAuthRegisterRequestBody"
          in: "body"
          description: "Body of request for register new user"
          required: true
          schema:
            $ref: "#/definitions/CoreAuthRegisterRequestModel"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/CoreAuthTokenModel"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /core/account/user:
    get:
      tags:
        - "user"
      summary: "Get current user info"
      description: ""
      produces:
        - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/CoreAccountUserModel"
        401:
          description: "Unauthorized"
        500:
          description: "Internal server error"

    put:
      tags:
        - "user"
      summary: "Update current user info"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "CoreAccountUpdateUserRequestBody"
          in: "body"
          description: "Body of request for register new user"
          required: true
          schema:
            $ref: "#/definitions/CoreAccountUpdateUserRequestModel"
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /core/handbooks/public/all:
    get:
      tags:
        - "handbooks"
      summary: "Get all handbooks"
      description: ""
      produces:
        - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/CoreHandbookPublicAllModel"
        500:
          description: "Internal server error"

  /core/account/projects:
    get:
      tags:
        - "projects"
      summary: "Get projects list"
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "limit"
          type: "integer"
          required: true
          description: "Limit of items in response"
        - in: "query"
          name: "offset"
          type: "integer"
          required: true
          description: "Offset of items in response"
        - in: "query"
          name: "sort_by"
          type: "string"
          description: "Sort by column"
        - in: "query"
          name: "sort_direction"
          type: "string"
          description: "Sort direction"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/CoreAccountProjectsListModel"
        401:
          description: "Unauthorized"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

    post:
      tags:
        - "projects"
      summary: "Create a project"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "CoreAccountCreateProjectRequestBody"
          in: "body"
          description: "Body of request for register new user"
          required: true
          schema:
            $ref: "#/definitions/CoreAccountCreateProjectRequestModel"
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        422:
          description: "Validation error"
        500:
          description: "Internal server error"

  /core/account/projects/{project}:
    get:
      tags:
        - "projects"
      summary: "Get detailed project info"
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "project"
          type: "integer"
          required: true
          description: "Id of project"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/CoreAccountProjectModel"
        401:
          description: "Unauthorized"
        403:
          description: "Access denied"
        404:
          description: "Not found!"
        500:
          description: "Internal server error"

    put:
      tags:
        - "projects"
      summary: "Update project info"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          name: "project"
          type: "integer"
          required: true
          description: "Id of project"
        - name: "CoreAccountUpdateProjectRequestBody"
          in: "body"
          description: "Body of request for register new user"
          required: true
          schema:
            $ref: "#/definitions/CoreAccountUpdateProjectRequestModel"
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        403:
          description: "Access denied"
        404:
          description: "Not found!"
        500:
          description: "Internal server error"

    delete:
      tags:
        - "projects"
      summary: "Delete project"
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "project"
          type: "integer"
          required: true
          description: "Id of project"
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Unauthorized"
        403:
          description: "Access denied"
        404:
          description: "Not found!"
        500:
          description: "Internal server error"

definitions:

  CoreAccountUpdateProjectRequestModel:
    type: "object"
    required:
      - "name"
      - "format_id"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      format_id:
        type: "integer"

  CoreAccountProjectsListModel:
    type: "object"
    properties:
      count:
        type: "integer"
      items:
        type: "array"
        items:
          $ref: "#/definitions/CoreAccountProjectModel"

  CoreAccountProjectModel:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
      description:
        type: "string"
      format_id:
        type: "integer"
      base_url:
        type: "string"

  CoreAccountCreateProjectRequestModel:
    type: "object"
    required:
      - "name"
      - "format_id"
    properties:
      name:
        type: "string"
      description:
        type: "string"
      format_id:
        type: "integer"

  CoreDefaultHandbookModel:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"

  CoreHandbookPublicAllModel:
    type: "object"
    properties:
      formats:
        type: "array"
        items:
          $ref: "#/definitions/CoreDefaultHandbookModel"

  CoreAccountUpdateUserRequestModel:
    type: "object"
    required:
      - "email"
    properties:
      email:
        type: "string"
      password:
        type: "string"
      password_confirmation:
        type: "string"

  CoreAccountUserModel:
    type: "object"
    properties:
      email:
        type: "string"

  CoreAuthTokenModel:
    type: "object"
    properties:
      success:
        type: "boolean"
      token:
        type: "string"

  CoreAuthLoginRequestModel:
    type: "object"
    required:
      - "email"
      - "password"
    properties:
      email:
        type: "string"
      password:
        type: "string"

  CoreAuthRegisterRequestModel:
    type: "object"
    required:
      - "email"
      - "password"
      - "password_confirmation"
    properties:
      email:
        type: "string"
      password:
        type: "string"
      password_confirmation:
        type: "string"
